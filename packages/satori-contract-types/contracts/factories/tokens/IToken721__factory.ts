/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IToken721, IToken721Interface } from "../../tokens/IToken721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "mintMultipleTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_token",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_pendingPayment",
        type: "bool",
      },
    ],
    name: "purchaseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IToken721__factory {
  static readonly abi = _abi;
  static createInterface(): IToken721Interface {
    return new utils.Interface(_abi) as IToken721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IToken721 {
    return new Contract(address, _abi, signerOrProvider) as IToken721;
  }
}
